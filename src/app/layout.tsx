import type { Metadata } from "next";
import "./globals.css";
import {
  Inter,
  Barlow,
  Fira_Sans,
  Roboto,
  Lora,
  Geist,
  Geist_Mono,
} from "next/font/google";
import "./globals.css";
import { SettingApi } from "./services/setting-api";
import NextTopLoader from "nextjs-toploader";
import { ReduxProvider } from "./redux/prodvider";
import { ToastContainer } from "react-toastify";
import { HtmlContent } from "./common/htmlContent";
// Load Google Fonts vá»›i next/font/google
const inter = Inter({
  subsets: ["latin"],
  weight: ["100", "200", "300", "400", "500", "600", "700", "800", "900"],
});
const barlow = Barlow({
  subsets: ["latin"],
  weight: ["100", "200", "300", "400", "500", "600", "700", "800", "900"],
});
const firaSans = Fira_Sans({
  subsets: ["latin"],
  weight: ["100", "200", "300", "400", "500", "600", "700", "800", "900"],
});
const roboto = Roboto({
  subsets: ["latin"],
  weight: ["100", "300", "400", "500", "700", "900"],
});
const lora = Lora({
  subsets: ["latin"],
  weight: ["400", "500", "600", "700"],
  style: ["italic", "normal"],
});

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  interface Setting {
    footer_script_code?: string; // Add other properties as needed
  }

  const setting: Setting = (await SettingApi.getSetting()) as Setting;
  const store = {
    setting,
  };
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased ${inter.className} ${barlow.className} ${firaSans.className} ${roboto.className} ${lora.className}`}
      >
        {children}
        <NextTopLoader />
        <ReduxProvider data={store}>
          {/* <MainLayout locale={store}>{children}</MainLayout> */}
          <ToastContainer autoClose={2000} closeOnClick />
        </ReduxProvider>

        {setting?.footer_script_code && (
          <HtmlContent content={setting.footer_script_code} />
        )}
      </body>
    </html>
  );
}
